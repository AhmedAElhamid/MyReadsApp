{"ast":null,"code":"import _classCallCheck from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahmedabdelhamid/MyReadsApp/src/App.js\";\nimport React from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport './App.css';\nimport Book from \"./Book\";\nimport BookShelf from \"./BookShelf\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false,\n      books: []\n    };\n\n    _this.updateBook = function (book) {\n      BooksAPI.update(book, {\n        shelf: book.shelf\n      }).then(function (book) {\n        _this.setState(function (state) {\n          books: state.books.filter(function (b) {\n            return b.id !== book.id;\n          }).concat([book]);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        return _this2.setState({\n          books: books\n        });\n      }).then(function (books) {\n        return console.log(_this2.state.books);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(BookShelf, {\n        shelf: \"Currently Reading\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(BookShelf, {\n        shelf: \"Want To Read\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(BookShelf, {\n        shelf: \"Read\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/ahmedabdelhamid/MyReadsApp/src/App.js"],"names":["React","Book","BookShelf","BooksAPI","BooksApp","state","showSearchPage","books","updateBook","book","update","shelf","then","setState","filter","b","id","concat","getAll","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Book from \"./Book\"\nimport BookShelf from \"./BookShelf\"\nimport * as BooksAPI from \"./BooksAPI\"\n\nclass BooksApp extends React.Component {\n\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: []\n  }\n  componentDidMount(){\n    BooksAPI.getAll().then(books =>\n      this.setState({books: books})).then(books => console.log(this.state.books))\n\n  }\n\n  updateBook = (book) => {\n    BooksAPI.update(book ,{\n      shelf: book.shelf\n    }).then(book => {\n      this.setState(state => {\n        books: state.books.filter(b => b.id !== book.id).concat([ book ])\n      })\n    })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BookShelf shelf=\"Currently Reading\" books={this.state.books} updateBook={this.updateBook} />\n                <BookShelf shelf=\"Want To Read\" books={this.state.books} updateBook={this.updateBook} />\n                <BookShelf shelf=\"Read\" books={this.state.books} updateBook={this.updateBook} />\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}