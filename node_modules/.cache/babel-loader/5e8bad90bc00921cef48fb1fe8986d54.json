{"ast":null,"code":"import _classCallCheck from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahmedabdelhamid/MyReadsApp/src/SearchInput.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from \"./BooksAPI\";\n\nvar SearchInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchInput, _Component);\n\n  function SearchInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\" // updateQuery = (query) =>{\n      //   this.setState({\n      //     query: query.trim() })\n      // }\n      // resetQuery = () => {\n      //   this.setState({\n      //     query: \"\"\n      //   })\n      // }\n\n    };\n\n    _this.searchByQuery = function (query) {\n      _this.setState({\n        query: query.trim()\n      });\n\n      console.log(\"sending query \".concat(query, \" to the API\"));\n      BooksAPI.search(_this.state.query).then(function (books) {\n        return _this.props.updateBooks(books);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: function onChange(event) {\n          return _this2.searchByQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchInput;\n}(Component);\n\nexport default SearchInput;","map":{"version":3,"sources":["/Users/ahmedabdelhamid/MyReadsApp/src/SearchInput.js"],"names":["React","Component","BooksAPI","SearchInput","state","query","searchByQuery","setState","trim","console","log","search","then","books","props","updateBooks","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;IAEMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,KAAK,EAAC,EADF,CAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXM,K;;UAaNC,a,GAAgB,UAACD,KAAD,EAAW;AACzB,YAAKE,QAAL,CAAc;AACPF,QAAAA,KAAK,EAAEA,KAAK,CAACG,IAAN;AADA,OAAd;;AAEAC,MAAAA,OAAO,CAACC,GAAR,yBAA6BL,KAA7B;AACAH,MAAAA,QAAQ,CAACS,MAAT,CAAgB,MAAKP,KAAL,CAAWC,KAA3B,EACCO,IADD,CACM,UAAAC,KAAK;AAAA,eAAI,MAAKC,KAAL,CAAWC,WAAX,CAAuBF,KAAvB,CAAJ;AAAA,OADX;AAED,K;;;;;;;6BAEO;AAAA;;AACJ,aAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AACE,QAAA,KAAK,EAAI,KAAKT,KAAL,CAAWC,KADtB;AAC6B,QAAA,QAAQ,EAAI,kBAACW,KAAD;AAAA,iBAAW,MAAI,CAACV,aAAL,CAAmBU,KAAK,CAACC,MAAN,CAAaC,KAAhC,CAAX;AAAA,SADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAFF;AAiBH;;;;EAzCuBjB,S;;AA2C1B,eAAeE,WAAf","sourcesContent":["import React,{ Component } from 'react'\nimport * as BooksAPI from \"./BooksAPI\"\n\nclass SearchInput extends Component{\n\n  state={\n    query:\"\"\n  }\n  // updateQuery = (query) =>{\n  //   this.setState({\n  //     query: query.trim() })\n  // }\n  // resetQuery = () => {\n  //   this.setState({\n  //     query: \"\"\n  //   })\n  // }\n\n  searchByQuery = (query) => {\n    this.setState({\n           query: query.trim() })\n    console.log(`sending query ${query} to the API`)\n    BooksAPI.search(this.state.query)\n    .then(books => this.props.updateBooks(books))\n  }\n\n  render(){\n      return(\n\n        <div className=\"search-books-input-wrapper\">\n          {/*\n            NOTES: The search from BooksAPI is limited to a particular set of search terms.\n            You can find these search terms here:\n            https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n            However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n            you don't find a specific author or title. Every search is limited by search terms.\n          */}\n          <input type=\"text\" placeholder=\"Search by title or author\"\n            value = {this.state.query} onChange = {(event) => this.searchByQuery(event.target.value)}/>\n\n        </div>\n\n      )\n  }\n}\nexport default SearchInput\n"]},"metadata":{},"sourceType":"module"}