{"ast":null,"code":"import _classCallCheck from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmedabdelhamid/MyReadsApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahmedabdelhamid/MyReadsApp/src/App.js\";\nimport React from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport './App.css';\nimport Book from \"./Book\";\nimport BookShelf from \"./BookShelf\";\nimport SearchInput from \"./SearchInput\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false,\n      books: [],\n      showingBooks: [],\n      query: \"\"\n    };\n\n    _this.resetSearch = function () {\n      _this.setState({\n        showSearchPage: false\n      });\n\n      _this.getAllBooks();\n    };\n\n    _this.getAllBooks = function () {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState({\n          books: books\n        });\n\n        console.log(books);\n      });\n    };\n\n    _this.updateBooks = function (books) {\n      _this.setState({\n        showingBooks: books\n      });\n    };\n\n    _this.updateBook = function (book) {\n      BooksAPI.update(book, book.shelf).then(function (books) {\n        return _this.setState({\n          books: books\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.showingBooks) {\n        this.setState({\n          showingBooks: this.state.books\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.resetSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Close\"), React.createElement(SearchInput, {\n        updateBooks: this.updateBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.showingBooks.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Book, {\n          book: book,\n          updateBook: _this2.updateBook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      })))) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(BookShelf, {\n        shelf: \"Currently Reading\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(BookShelf, {\n        shelf: \"Want To Read\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(BookShelf, {\n        shelf: \"Read\",\n        books: this.state.books,\n        updateBook: this.updateBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/ahmedabdelhamid/MyReadsApp/src/App.js"],"names":["React","Book","BookShelf","SearchInput","BooksAPI","BooksApp","state","showSearchPage","books","showingBooks","query","resetSearch","setState","getAllBooks","getAll","then","console","log","updateBooks","updateBook","book","update","shelf","map","id","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Book from \"./Book\"\nimport BookShelf from \"./BookShelf\"\nimport SearchInput from \"./SearchInput\"\nimport * as BooksAPI from \"./BooksAPI\"\n\nclass BooksApp extends React.Component {\n\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: [],\n    showingBooks: [],\n    query: \"\"\n  }\n  componentDidMount(){\n    this.getAllBooks()\n  }\n  resetSearch = () =>{\n    this.setState({ showSearchPage: false })\n    this.getAllBooks()\n  }\n\n  getAllBooks = () => {\n    BooksAPI.getAll().then(books =>{\n      this.setState({books: books})\n      console.log(books)}\n    )\n  }\n\n  updateBooks = (books) => {\n    this.setState({showingBooks: books})\n  }\n  updateBook = (book) => {\n    BooksAPI.update(book ,book.shelf)\n    .then(books => this.setState({\n      books: books}))\n  }\n  render() {\n    if(!this.state.showingBooks){\n      this.setState({\n        showingBooks: this.state.books\n      })\n    }\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.resetSearch()}>Close</button>\n              <SearchInput updateBooks={this.updateBooks} />\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n                {this.state.showingBooks\n                  .map(book =>\n                  <li key={book.id}><Book book={book} updateBook={this.updateBook}></Book></li>\n                )}\n              </ol>\n            </div>\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BookShelf shelf=\"Currently Reading\" books={this.state.books} updateBook={this.updateBook} />\n                <BookShelf shelf=\"Want To Read\" books={this.state.books} updateBook={this.updateBook} />\n                <BookShelf shelf=\"Read\" books={this.state.books} updateBook={this.updateBook} />\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}